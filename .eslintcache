[{"D:\\React-app\\legendesk-webapp\\src\\Components\\RouteConfig\\RouteConfig.jsx":"1","D:\\React-app\\legendesk-webapp\\src\\Components\\Home\\Home.jsx":"2","D:\\React-app\\legendesk-webapp\\src\\Components\\Navbar\\NavButton.jsx":"3","D:\\React-app\\legendesk-webapp\\src\\Components\\Context\\GlobalState.jsx":"4","D:\\React-app\\legendesk-webapp\\src\\App.js":"5","D:\\React-app\\legendesk-webapp\\src\\Components\\Navbar\\NavMenu.jsx":"6","D:\\React-app\\legendesk-webapp\\src\\index.js":"7","D:\\React-app\\legendesk-webapp\\src\\reportWebVitals.js":"8"},{"size":840,"mtime":1607515738877,"results":"9","hashOfConfig":"10"},{"size":5827,"mtime":1607544476701,"results":"11","hashOfConfig":"10"},{"size":1533,"mtime":1607522309012,"results":"12","hashOfConfig":"10"},{"size":423,"mtime":1607522346897,"results":"13","hashOfConfig":"10"},{"size":471,"mtime":1607529475880,"results":"14","hashOfConfig":"10"},{"size":1625,"mtime":1607522493202,"results":"15","hashOfConfig":"10"},{"size":648,"mtime":1607517253957,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1607345167355,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xm0bzf",{"filePath":"20","messages":"21","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React-app\\legendesk-webapp\\src\\Components\\RouteConfig\\RouteConfig.jsx",[],"D:\\React-app\\legendesk-webapp\\src\\Components\\Home\\Home.jsx",["36","37","38","39","40","41","42","43"],"D:\\React-app\\legendesk-webapp\\src\\Components\\Navbar\\NavButton.jsx",[],["44","45"],"D:\\React-app\\legendesk-webapp\\src\\Components\\Context\\GlobalState.jsx",[],"D:\\React-app\\legendesk-webapp\\src\\App.js",[],"D:\\React-app\\legendesk-webapp\\src\\Components\\Navbar\\NavMenu.jsx",["46"],"import {useState,useContext} from \"react\"\r\nimport  \"./NavMenu.css\"\r\nimport {Link,useHistory} from \"react-router-dom\" \r\nimport {MainContext} from \"../Context/GlobalState\"\r\n\r\nconst NavMenu = ()=>{\r\n\r\nconst [toggleMenuItem,setToggleMenuItem] = useState(false) \r\nconst mainCntxt = useContext(MainContext)\r\nconst {setToggleNavClass,toggleNavClass,isOpen,setIsOpen} = mainCntxt\r\nconst onChangeNavClass = ()=>{\r\n  setToggleNavClass(!toggleNavClass)\r\n  setIsOpen(!isOpen)\r\n}\r\nconst history = useHistory()   \r\nconst onHoverRoute = (path)=>{\r\n history.push(path)\r\n}\r\n\r\n\r\n  const navLink_Data = [{title: \"Hello.\",text: \"Today at Huge.\",path: \"/\"},\r\n  {title: \"SBU.\",text: \"Fully-Functional-Unit.\",path: \"/SBU\"},\r\n  {title: \"Work.\",text: \"What we've made.\",path: \"/Work\"},\r\n  {title: \"Legends\",text:\"Our Management\",path: \"/Legends\"},\r\n  {title: \"Careers.\",text: \"Join the team.\",path: \"/Career\"},\r\n  {title: \"Contact.\",text: \"Get in touch.\",path : \"/Contact\"}]\r\n\r\n    return(\r\n    <div className = {toggleMenuItem ? \"nav-Menu-active\" : \"nav-Menu\"}>\r\n                <ul className = \"nav_list\" > \r\n                   {navLink_Data.map((navMenu,index)=>(\r\n                       <li key = {index} className=\"nav_list_items\">\r\n                        <Link to = {navMenu.path}\r\n                        onClick = {onChangeNavClass}\r\n                        onMouseEnter = {()=> onHoverRoute(navMenu.path)} className = \"nav-list-menu\" >{navMenu.title}</Link>\r\n                        <p>{navMenu.text}</p>\r\n                       </li>\r\n                   ))} \r\n                </ul>\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\nexport default NavMenu","D:\\React-app\\legendesk-webapp\\src\\index.js",[],"D:\\React-app\\legendesk-webapp\\src\\reportWebVitals.js",[],{"ruleId":"47","severity":1,"message":"48","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":3,"column":38,"nodeType":"49","messageId":"50","endLine":3,"endColumn":44},{"ruleId":"47","severity":1,"message":"52","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":23},{"ruleId":"53","severity":1,"message":"54","line":63,"column":5,"nodeType":"55","endLine":63,"endColumn":7,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":106,"column":15,"nodeType":"59","endLine":106,"endColumn":81},{"ruleId":"57","severity":1,"message":"58","line":109,"column":15,"nodeType":"59","endLine":109,"endColumn":81},{"ruleId":"57","severity":1,"message":"58","line":112,"column":15,"nodeType":"59","endLine":112,"endColumn":81},{"ruleId":"57","severity":1,"message":"58","line":113,"column":15,"nodeType":"59","endLine":113,"endColumn":81},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"47","severity":1,"message":"64","line":8,"column":23,"nodeType":"49","messageId":"50","endLine":8,"endColumn":40},"no-unused-vars","'gsap' is defined but never used.","Identifier","unusedVar","'Power3' is defined but never used.","'ScrollTrigger' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timeline'. Either include it or remove the dependency array.","ArrayExpression",["65"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'setToggleMenuItem' is assigned a value but never used.",{"desc":"68","fix":"69"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [timeline]",{"range":"70","text":"71"},[2128,2130],"[timeline]"]